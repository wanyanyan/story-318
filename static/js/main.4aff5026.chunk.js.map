{"version":3,"sources":["App.js","serviceWorker.js","config.js","index.js"],"names":["layerTypes","alignments","transformRequest","url","hasQuery","indexOf","Chapter","id","theme","title","image","description","classList","currentChapterID","className","src","alt","App","props","state","currentChapter","chapters","config","this","mapStart","location","mapboxgl","accessToken","map","Map","container","mapContainer","style","center","zoom","pitch","bearing","marker","Marker","setLayerOpacity","layer","layerType","getLayer","type","getLayerPaintType","forEach","prop","setPaintProperty","opacity","showMarkers","setLngLat","addTo","setState","bind","scroller","scrollama","on","setup","step","offset","progress","onStepEnter","response","chapter","find","chap","element","flyTo","onChapterEnter","length","onStepExit","onChapterExit","window","addEventListener","resize","ref","el","subtitle","byline","alignment","key","footer","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4aff5026.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport scrollama from 'scrollama';\r\n\r\nconst layerTypes = {\r\n    'fill': ['fill-opacity'],\r\n    'line': ['line-opacity'],\r\n    'circle': ['circle-opacity', 'circle-stroke-opacity'],\r\n    'symbol': ['icon-opacity', 'text-opacity'],\r\n    'raster': ['raster-opacity'],\r\n    'fill-extrusion': ['fill-extrusion-opacity']\r\n}\r\n\r\nconst alignments = {\r\n    'left': 'lefty',\r\n    'center': 'centered',\r\n    'right': 'righty'\r\n}\r\n\r\nconst transformRequest = (url) => {\r\n    const hasQuery = url.indexOf(\"?\") !== -1;\t  \r\n    const suffix = hasQuery ? \"&pluginName=journalismScrollytelling\" : \"?pluginName=journalismScrollytelling\";\t  \r\n    return {\r\n      url: url + suffix\r\n    }\t  \r\n}\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentChapter: props.chapters[0]\r\n        };\r\n        // this.setState = this.setState.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const config = this.props;\r\n        const mapStart = config.chapters[0].location;\r\n\r\n        mapboxgl.accessToken = config.accessToken;\r\n\r\n        const map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            style: config.style,\r\n            center: mapStart.center,\r\n            zoom: mapStart.zoom,\r\n            pitch: mapStart.pitch,\r\n            bearing: mapStart.bearing,\r\n            transformRequest: transformRequest\r\n        });\r\n\r\n        const marker = new mapboxgl.Marker();\r\n        if (config.showMarkers) {\r\n            marker.setLngLat(mapStart.center).addTo(map);\r\n        }\r\n\r\n        function getLayerPaintType(layer) {\r\n            var layerType = map.getLayer(layer).type;\r\n            return layerTypes[layerType];\r\n        }\r\n\r\n        function setLayerOpacity(layer) {\r\n            var paintProps = getLayerPaintType(layer.layer);\r\n            paintProps.forEach(function(prop) {\r\n                map.setPaintProperty(layer.layer, prop, layer.opacity);\r\n            });\r\n        }\r\n\r\n        const setState = this.setState.bind(this);\r\n\r\n        // instantiate the scrollama\r\n        const scroller = scrollama();\r\n\r\n        map.on('load', function () {\r\n\r\n            // setup the instance, pass callback functions\r\n            scroller\r\n            .setup({\r\n                step: '.step',\r\n                offset: 0.5,\r\n                progress: true\r\n            })\r\n            .onStepEnter(response => {\r\n                const chapter = config.chapters.find(chap => chap.id === response.element.id);\r\n                setState({currentChapter:chapter});\r\n                map.flyTo(chapter.location);\r\n                if (config.showMarkers) {\r\n                    marker.setLngLat(chapter.location.center);\r\n                }\r\n                if (chapter.onChapterEnter.length > 0) {\r\n                    chapter.onChapterEnter.forEach(setLayerOpacity);\r\n                }\r\n            })\r\n            .onStepExit(response => {\r\n                var chapter = config.chapters.find(chap => chap.id === response.element.id);\r\n                if (chapter.onChapterExit.length > 0) {\r\n                    chapter.onChapterExit.forEach(setLayerOpacity);\r\n                }\r\n            });\r\n        });\r\n\r\n        window.addEventListener('resize', scroller.resize);\r\n    }\r\n\r\n    render() {\r\n        const config = this.props;\r\n        const theme = config.theme;\r\n        const currentChapterID = this.state.currentChapter.id;\r\n        return (\r\n            <div>\r\n                <div ref={el => this.mapContainer = el} className=\"absolute top right left bottom\" />\r\n                <div id=\"story\">\r\n                    {config.title &&\r\n                        <div id=\"header\" className={theme}>\r\n                            <h1>{config.title}</h1>\r\n                            {config.subtitle &&\r\n                                <h2>{config.subtitle}</h2>\r\n                            }\r\n                            {config.byline &&\r\n                                <p>{config.byline}</p>\r\n                            }\r\n                        </div>\r\n                    }\r\n                    <div id=\"features\" className={alignments[config.alignment]}>\r\n                        {\r\n                            config.chapters.map(chapter => \r\n                                <Chapter key={chapter.id} theme={theme} {...chapter} currentChapterID={currentChapterID}/>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    {config.footer &&\r\n                        <div id=\"footer\" className={theme}>\r\n                            <p>{config.footer}</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction Chapter({id, theme, title, image, description, currentChapterID}) {\r\n    const classList = id === currentChapterID ? \"step active\" : \"step\";\r\n    return (\r\n        <div id={id} className={classList}>\r\n            <div className={theme}>\r\n                { title &&\r\n                    <h3 className=\"title\">{title}</h3>\r\n                }\r\n                { image &&\r\n                    <img src={image} alt={title}></img>\r\n                }\r\n                { description &&\r\n                    <p>{description}</p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","var config = {\r\n  style: 'mapbox://styles/wanyanyan/ck3i5wsy01n6t1co0uku6e6yb',\r\n  accessToken: 'pk.eyJ1Ijoid2FueWFueWFuIiwiYSI6Im1uNVZnTncifQ.90XY40_yjpItUHO8HnbbpA',\r\n  showMarkers: true,\r\n  theme: 'dark',\r\n  alignment: 'left',\r\n  title: '川藏公路（G318） - 中国人的景观大道',\r\n  subtitle: '沿途穿过的高山及垭口',\r\n  byline: 'By wanyanyan',\r\n  footer: 'Source: source citations, etc.',\r\n  chapters: [\r\n    {\r\n      id: 'slug-style-id',\r\n      title: '概述',\r\n      image: './images/01.jpg',\r\n      description: '全程2146公里，穿行于西藏东部的高山峡谷区。跨越金沙江、澜沧江、怒江、雅鲁藏布江和著名的念青唐古拉山脉、冈底斯山脉，四川境内的大渡河、雅砻江、二郎山、折多山、高尔寺山等。',\r\n      location: {\r\n        center: [92.87596, 30.93050],\r\n        zoom: 5.23,\r\n        pitch: 33.50,\r\n        bearing: 0.00\r\n      },\r\n      onChapterEnter: [\r\n      // {\r\n      //     layer: 'layer-name',\r\n      //     opacity: 1\r\n      // }\r\n      ],\r\n      onChapterExit: [\r\n      // {\r\n      //     layer: 'layer-name',\r\n      //     opacity: 0\r\n      // }\r\n      ]\r\n    },\r\n    {\r\n      id: 'other-identifier-02',\r\n      title: '折多山',\r\n      image: './images/02.jpg',\r\n      description: '海拔4298米，进藏的第一道垭口，又是重要的地理分界线，西面为高原隆起地带，有雅砻江，右为高山峡谷地带，有大渡河。',\r\n      location: {\r\n        center: [101.79752, 30.08014],\r\n        zoom: 12.53,\r\n        pitch: 36.00,\r\n        bearing: 0.00\r\n      },\r\n      onChapterEnter: [],\r\n      onChapterExit: []\r\n    },\r\n    {\r\n      id: 'other-identifier-03',\r\n      title: '高尔寺山',\r\n      image: './images/03.jpg',\r\n      description: '海拔4659米，垭口海拔4412米，位于新都桥与雅江县之间，上山的路公路不是很好走，如果说折多山是康巴第一关的话, 那么高尔寺山则是康巴第二关, 而且它是纵览大雪山(雅拉神山, 折多山, 和贡嘎神山)的最佳位置之一。',\r\n      location: {\r\n        center: [101.29418, 30.05274],\r\n        zoom: 13.39,\r\n        pitch: 36.00,\r\n        bearing: 0.00\r\n      },\r\n      onChapterEnter: [],\r\n      onChapterExit: []\r\n    },\r\n    {\r\n      id: 'other-identifier-04',\r\n      title: '剪子弯山',\r\n      image: './images/04.jpg',\r\n      description: '海拔4659米，雄峙于四川省雅江县香格宗乡西侧，呈西北-东南走向，为雅砻江与吉珠沟的分水岭，因翻越其驿道傍山成剪刀形弯曲而上故名，藏名“博浪贡”，意为全天有雾的山顶。川藏公路盘山翻越的剪子弯山口是318国道在康巴地区的最高山口之一。',\r\n      location: {\r\n        center: [100.87021, 30.00432],\r\n        zoom: 13.47,\r\n        pitch: 36.00,\r\n        bearing: 0.00\r\n      },\r\n      onChapterEnter: [],\r\n      onChapterExit: []\r\n    },\r\n    {\r\n      id: 'other-identifier-05',\r\n      title: '东达山',\r\n      image: './images/05.jpg',\r\n      description: '海拔5008米，是川藏南线上海拔第二高度的垭口，位于西藏左贡县境内，垭口海拔标高5008米，夏季草坪青绿，牦牛成群，风光极为美丽。山路不再蜿蜒曲折，而是一条笔直的通向前方的大路，既缓且长，一眼看不到尽头，这就是川藏线最长最缠绵的东达山了',\r\n      location: {\r\n        center: [97.95362, 29.73248],\r\n        zoom: 13.64,\r\n        pitch: 36.00,\r\n        bearing: 0.00\r\n      },\r\n      onChapterEnter: [],\r\n      onChapterExit: []\r\n    },\r\n    {\r\n      id: 'other-identifier-06',\r\n      title: '业拉山',\r\n      image: './images/06.jpg',\r\n      description: '海拔4618米，横断山脉的最后也是最大的天险，怒江山地处横断山脉和青藏高原的结合部，地质活动频繁，泥石流和大规模的塌方十分常见。从怒江河谷到怒江山垭口陡峭的几十公里路程，高差达到2000米，经历了从炎炎夏日到肃杀寒冬的变化，从阔叶林到针叶林的植物垂直分带也十分明显。 著名的怒江山九十九道拐就在这里。',\r\n      location: {\r\n        center: [97.30851, 30.15842],\r\n        zoom: 12.91,\r\n        pitch: 36.00,\r\n        bearing: 0.00\r\n      },\r\n      onChapterEnter: [],\r\n      onChapterExit: []\r\n    },\r\n    {\r\n      id: 'other-identifier-07',\r\n      title: '色季拉山',\r\n      image: './images/07.jpg',\r\n      description: '海拔4728米，属念青唐古拉山脉，是西藏林芝县东部与中西部的分界带，是尼洋河流域与帕隆藏布江的分水岭，为川藏公路南线所跨越。登临海拔4728米处的山口（会有高原反应，要预防缺乏内源氧），可观日出、云海、无际的林海和远眺南迦巴瓦峰峻美的雄姿。色季拉山西坡的达则村旁的本日拉山，是西藏苯教的圣地，为西藏四大神山之一，来此转山朝拜的人四季不绝，信徒来自四面八方。',\r\n      location: {\r\n        center: [94.62854, 29.63033],\r\n        zoom: 12.68,\r\n        pitch: 36.00,\r\n        bearing: 0.00\r\n      },\r\n      onChapterEnter: [],\r\n      onChapterExit: []\r\n    },\r\n    {\r\n      id: 'other-identifier-08',\r\n      title: '米拉山',\r\n      image: './images/08.jpg',\r\n      description: '海拔5018米，拉萨市（墨竹工卡县）与林芝地区（工布江达县）的界山，是其东南面的尼洋河水系和其西北面的拉萨河水系的分水岭。米拉山因其高大雄奇而成为此地藏民心目中的神山，山口上挂着大片壮观的风马旗，地上遍布着抛洒的印有经文的隆达纸。',\r\n      location: {\r\n        center: [92.36058, 29.82203],\r\n        zoom: 12.48,\r\n        pitch: 36.00,\r\n        bearing: 0.00\r\n      },\r\n      onChapterEnter: [],\r\n      onChapterExit: []\r\n    }\r\n  ]\r\n};\r\n\r\nexport default config;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport config from './config.js';\r\n\r\n\r\n\r\nReactDOM.render(<App {...config}/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}